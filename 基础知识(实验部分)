详细笔记在思维导图中
实验
-debug
-a
mov ax,5
mov ax,0
mov al,5
会自动给你补齐相应的位数

mov ax,1a2b
mov bx,ax
mov ch,bl
mov cl,bh
mov dl,ch
mov ax,dx
数据域寄存器之间要 保证一致性,8位寄存器给8位寄存器,8位数据给8位寄存器,16位数据给16位寄存器,16位寄存器给16位寄存器. 如果数据超出8位或者16位的话会报错

mov ax,bl
mov bh,ax
mov al,100H
mov ax,10000H
mov al,0005H
数据域寄存器之间要 保证一致性,这几条指令都没有保证一致性
(数据前面写0如果超了也不行,如果前面不写0,编译器会自动给你补齐,所以没事就不要在前面写0)

加法超过最大值会这么样
(要保证数据之间的一致性我们的编译器会把写的数如果不和前面的位寄存器相对应的话,会补齐成相应的位数,并且都是用的是16进制)
mov ax,08
mov ah,78
add ax,8
指令add是加法运算,就是逗号右边的值加上逗号左边的值,然后逗号左边的值等于右边已经加过的值,类似于C语言中的+=
最后得到的是ax=7810(因为是16进制)
